* !!! Write some unit-tests that offer larger "use-case stories" that allow for larger refactorings.
* Refactor the whole Connection approach, preferably with an own
  response class that is used instead of the Zend_Http_Response and
  completly replaces Phly_Couch_Result.
* Identiy Map for Documents: Phly_Couch::enableDocumentStorage(); ?? disable? other name?
* Couch_View::query() - Complex keys and query structures are probably not supported natively
  by the current structure of the function. (See: http://www.cmlenz.net/archives/2007/10/couchdb-joins)
* Couch::docOpen - Handle error on loading unknown document.
* Couch::docRemove - Mark document class (id and revision) as deleted
* Couch_Document::fetchAllRevisions() and ::fetchRevision()
* Couch_View::sortByKey() missing
* Couch_TemporaryView - Language Key missing
* Couch_DocumentSet - Optional Max Storage Int where an auto update and removal of documents is done.
* Documentation for all classes and functions
* Big Todo: Attachments for Documents